(*Generated by Lem from ../../src/gen_lib/state.lem.*)
open HolKernel Parse boolLib bossLib;
open lem_pervasives_extraTheory sail2_valuesTheory sail2_state_monadTheory sail2_stateTheory;

val _ = numLib.prefer_num();



open lemLib;
(* val _ = lemLib.run_interactive := true; *)
val _ = new_theory "sail2_stateAuxiliary"


(****************************************************)
(*                                                  *)
(* Termination Proofs                               *)
(*                                                  *)
(****************************************************)

(* val gst = Defn.tgoal_no_defn (iterS_aux_def, iterS_aux_ind) *)
val (iterS_aux_rw, iterS_aux_ind_rw) =
  Defn.tprove_no_defn ((iterS_aux_def, iterS_aux_ind),
    WF_REL_TAC`measure (LENGTH o SND o SND)` \\ rw[]
  )
val iterS_aux_rw = save_thm ("iterS_aux_rw", iterS_aux_rw);
val iterS_aux_ind_rw = save_thm ("iterS_aux_ind_rw", iterS_aux_ind_rw);


(* val gst = Defn.tgoal_no_defn (foreachS_def, foreachS_ind) *)
val (foreachS_rw, foreachS_ind_rw) =
  Defn.tprove_no_defn ((foreachS_def, foreachS_ind),
    WF_REL_TAC`measure (LENGTH o FST)` \\ rw[]
  )
val foreachS_rw = save_thm ("foreachS_rw", foreachS_rw);
val foreachS_ind_rw = save_thm ("foreachS_ind_rw", foreachS_ind_rw);


(*
These are unprovable.

(* val gst = Defn.tgoal_no_defn (whileS_def, whileS_ind) *)
val (whileS_rw, whileS_ind_rw) =
  Defn.tprove_no_defn ((whileS_def, whileS_ind),
    cheat (* the termination proof *)
  )
val whileS_rw = save_thm ("whileS_rw", whileS_rw);
val whileS_ind_rw = save_thm ("whileS_ind_rw", whileS_ind_rw);


(* val gst = Defn.tgoal_no_defn (untilS_def, untilS_ind) *)
val (untilS_rw, untilS_ind_rw) =
  Defn.tprove_no_defn ((untilS_def, untilS_ind),
    cheat (* the termination proof *)
  )
val untilS_rw = save_thm ("untilS_rw", untilS_rw);
val untilS_ind_rw = save_thm ("untilS_ind_rw", untilS_ind_rw);
*)


val _ = export_theory()

